<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0614.2338                               -->
<workbook original-version='18.1' source-build='2020.2.2 (20202.20.0614.2338)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='datasets_894_813759_2015' inline='true' name='federated.0uyc1jo16a2w8519h8igw0pscfnv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='datasets_894_813759_2015' name='textscan.1nvh7gd0qm3xp2126saar16yctu1'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/matt/Desktop/dataProjects/tableau_banter/world_happiness/datasets_894_813759_2015.csv' dataRefreshTime='' directory='C:/Users/matt/Desktop/dataProjects/tableau_banter/world_happiness' filename='C:/Users/matt/AppData/Local/Temp/TableauTemp/1xujxvo0cyecx618u8e0w1xj44gx/datasets_894_813759_2015.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1nvh7gd0qm3xp2126saar16yctu1' name='datasets_894_813759_2015.csv' table='[datasets_894_813759_2015#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:L159:no:A1:L159:1' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='integer' name='Happiness Rank' ordinal='2' />
            <column datatype='real' name='Happiness Score' ordinal='3' />
            <column datatype='real' name='Standard Error' ordinal='4' />
            <column datatype='real' name='Economy (GDP per Capita)' ordinal='5' />
            <column datatype='real' name='Family' ordinal='6' />
            <column datatype='real' name='Health (Life Expectancy)' ordinal='7' />
            <column datatype='real' name='Freedom' ordinal='8' />
            <column datatype='real' name='Trust (Government Corruption)' ordinal='9' />
            <column datatype='real' name='Generosity' ordinal='10' />
            <column datatype='real' name='Dystopia Residual' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1nvh7gd0qm3xp2126saar16yctu1' name='datasets_894_813759_2015.csv' table='[datasets_894_813759_2015#csv$]' type='table'>
            <columns character-set='UTF-8' gridOrigin='A1:L159:no:A1:L159:1' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='integer' name='Happiness Rank' ordinal='2' />
              <column datatype='real' name='Happiness Score' ordinal='3' />
              <column datatype='real' name='Standard Error' ordinal='4' />
              <column datatype='real' name='Economy (GDP per Capita)' ordinal='5' />
              <column datatype='real' name='Family' ordinal='6' />
              <column datatype='real' name='Health (Life Expectancy)' ordinal='7' />
              <column datatype='real' name='Freedom' ordinal='8' />
              <column datatype='real' name='Trust (Government Corruption)' ordinal='9' />
              <column datatype='real' name='Generosity' ordinal='10' />
              <column datatype='real' name='Dystopia Residual' ordinal='11' />
            </columns>
          </relation>
          <relation connection='textscan.1nvh7gd0qm3xp2126saar16yctu1' name='datasets_894_813759_2019.csv' table='[datasets_894_813759_2019#csv$]' type='table'>
            <columns gridOrigin='A1:I157:no:A1:I157:1'>
              <column datatype='integer' name='Overall rank' ordinal='0' />
              <column datatype='string' name='Country or region' ordinal='1' />
              <column datatype='real' name='Score' ordinal='2' />
              <column datatype='real' name='GDP per capita' ordinal='3' />
              <column datatype='real' name='Social support' ordinal='4' />
              <column datatype='real' name='Healthy life expectancy' ordinal='5' />
              <column datatype='real' name='Freedom to make life choices' ordinal='6' />
              <column datatype='real' name='Generosity' ordinal='7' />
              <column datatype='real' name='Perceptions of corruption' ordinal='8' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Country or region]' value='[datasets_894_813759_2019.csv].[Country or region]' />
          <map key='[Country]' value='[datasets_894_813759_2015.csv].[Country]' />
          <map key='[Dystopia Residual]' value='[datasets_894_813759_2015.csv].[Dystopia Residual]' />
          <map key='[Economy (GDP per Capita)]' value='[datasets_894_813759_2015.csv].[Economy (GDP per Capita)]' />
          <map key='[Family]' value='[datasets_894_813759_2015.csv].[Family]' />
          <map key='[Freedom to make life choices]' value='[datasets_894_813759_2019.csv].[Freedom to make life choices]' />
          <map key='[Freedom]' value='[datasets_894_813759_2015.csv].[Freedom]' />
          <map key='[GDP per capita]' value='[datasets_894_813759_2019.csv].[GDP per capita]' />
          <map key='[Generosity (datasets_894_813759_2019.csv)]' value='[datasets_894_813759_2019.csv].[Generosity]' />
          <map key='[Generosity]' value='[datasets_894_813759_2015.csv].[Generosity]' />
          <map key='[Happiness Rank]' value='[datasets_894_813759_2015.csv].[Happiness Rank]' />
          <map key='[Happiness Score]' value='[datasets_894_813759_2015.csv].[Happiness Score]' />
          <map key='[Health (Life Expectancy)]' value='[datasets_894_813759_2015.csv].[Health (Life Expectancy)]' />
          <map key='[Healthy life expectancy]' value='[datasets_894_813759_2019.csv].[Healthy life expectancy]' />
          <map key='[Overall rank]' value='[datasets_894_813759_2019.csv].[Overall rank]' />
          <map key='[Perceptions of corruption]' value='[datasets_894_813759_2019.csv].[Perceptions of corruption]' />
          <map key='[Region]' value='[datasets_894_813759_2015.csv].[Region]' />
          <map key='[Score]' value='[datasets_894_813759_2019.csv].[Score]' />
          <map key='[Social support]' value='[datasets_894_813759_2019.csv].[Social support]' />
          <map key='[Standard Error]' value='[datasets_894_813759_2015.csv].[Standard Error]' />
          <map key='[Trust (Government Corruption)]' value='[datasets_894_813759_2015.csv].[Trust (Government Corruption)]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L159:no:A1:L159:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>1580</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[datasets_894_813759_2019.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I157:no:A1:I157:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>1248</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_91310D1CE0D34F1AA4994EDB49C0A4C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_91310D1CE0D34F1AA4994EDB49C0A4C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Happiness Rank]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Happiness Rank</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_91310D1CE0D34F1AA4994EDB49C0A4C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Happiness Score]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Happiness Score</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_91310D1CE0D34F1AA4994EDB49C0A4C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Standard Error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Standard Error]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Standard Error</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_91310D1CE0D34F1AA4994EDB49C0A4C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Economy (GDP per Capita)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Economy (GDP per Capita)]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Economy (GDP per Capita)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_91310D1CE0D34F1AA4994EDB49C0A4C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Family</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Family]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Family</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_91310D1CE0D34F1AA4994EDB49C0A4C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health (Life Expectancy)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health (Life Expectancy)]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Health (Life Expectancy)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_91310D1CE0D34F1AA4994EDB49C0A4C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Freedom</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_91310D1CE0D34F1AA4994EDB49C0A4C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trust (Government Corruption)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Trust (Government Corruption)]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Trust (Government Corruption)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_91310D1CE0D34F1AA4994EDB49C0A4C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_91310D1CE0D34F1AA4994EDB49C0A4C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dystopia Residual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dystopia Residual]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Dystopia Residual</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_91310D1CE0D34F1AA4994EDB49C0A4C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overall rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Overall rank]</local-name>
            <parent-name>[datasets_894_813759_2019.csv]</parent-name>
            <remote-alias>Overall rank</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2019.csv_9E6306EEA7134527B341DBEE4D4DC983]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country or region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country or region]</local-name>
            <parent-name>[datasets_894_813759_2019.csv]</parent-name>
            <remote-alias>Country or region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2019.csv_9E6306EEA7134527B341DBEE4D4DC983]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Score]</local-name>
            <parent-name>[datasets_894_813759_2019.csv]</parent-name>
            <remote-alias>Score</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2019.csv_9E6306EEA7134527B341DBEE4D4DC983]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP per capita]</local-name>
            <parent-name>[datasets_894_813759_2019.csv]</parent-name>
            <remote-alias>GDP per capita</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2019.csv_9E6306EEA7134527B341DBEE4D4DC983]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Social support]</local-name>
            <parent-name>[datasets_894_813759_2019.csv]</parent-name>
            <remote-alias>Social support</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2019.csv_9E6306EEA7134527B341DBEE4D4DC983]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Healthy life expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Healthy life expectancy]</local-name>
            <parent-name>[datasets_894_813759_2019.csv]</parent-name>
            <remote-alias>Healthy life expectancy</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2019.csv_9E6306EEA7134527B341DBEE4D4DC983]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom to make life choices</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom to make life choices]</local-name>
            <parent-name>[datasets_894_813759_2019.csv]</parent-name>
            <remote-alias>Freedom to make life choices</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2019.csv_9E6306EEA7134527B341DBEE4D4DC983]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity (datasets_894_813759_2019.csv)]</local-name>
            <parent-name>[datasets_894_813759_2019.csv]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2019.csv_9E6306EEA7134527B341DBEE4D4DC983]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perceptions of corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Perceptions of corruption]</local-name>
            <parent-name>[datasets_894_813759_2019.csv]</parent-name>
            <remote-alias>Perceptions of corruption</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2019.csv_9E6306EEA7134527B341DBEE4D4DC983]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Afghanistan, Bangladesh, India and 2 more&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;Sri Lanka&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Angola&quot;'>
            <value>&quot;Angola&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Argentina, Brazil, Chile and 11 more&quot;'>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Costa Rica&quot;</value>
            <value>&quot;Ecuador&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Panama&quot;</value>
            <value>&quot;Suriname&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
            <value>&quot;Uruguay&quot;</value>
            <value>&quot;Venezuela&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Armenia, Bulgaria, Georgia and 1 more&quot;'>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Ukraine&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Australia &amp; New Zealand&quot;'>
            <value>&quot;Australia&quot;</value>
            <value>&quot;New Zealand&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Austria, Belgium, Denmark and 14 more&quot;'>
            <value>&quot;Austria&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Finland&quot;</value>
            <value>&quot;France&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;Iceland&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Luxembourg&quot;</value>
            <value>&quot;Malta&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;Spain&quot;</value>
            <value>&quot;Sweden&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;United Kingdom&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Bahrain, Israel, Kuwait and 4 more&quot;'>
            <value>&quot;Bahrain&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Kuwait&quot;</value>
            <value>&quot;Oman&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Cambodia &amp; Myanmar&quot;'>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;Myanmar&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Canada &amp; United States&quot;'>
            <value>&quot;Canada&quot;</value>
            <value>&quot;United States&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Czech Republic, Slovakia, Uzbekistan&quot;'>
            <value>&quot;Czech Republic&quot;</value>
            <value>&quot;Slovakia&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Egypt, Iran, Iraq and 3 more&quot;'>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;Iran&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Palestinian Territories&quot;</value>
            <value>&quot;Syria&quot;</value>
            <value>&quot;Yemen&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Japan, South Korea, Taiwan&quot;'>
            <value>&quot;Japan&quot;</value>
            <value>&quot;South Korea&quot;</value>
            <value>&quot;Taiwan&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Singapore &amp; Thailand&quot;'>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Thailand&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country or region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
      <column caption='Generosity (datasets 894 813759 2019.csv)' datatype='real' name='[Generosity (datasets_894_813759_2019.csv)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
      <column datatype='real' name='[Health (Life Expectancy)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Region]' new-bin='true' />
      </column>
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='datasets_894_813759_2015.csv' datatype='table' name='[__tableau_internal_object_id__].[datasets_894_813759_2015.csv_91310D1CE0D34F1AA4994EDB49C0A4C7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='datasets_894_813759_2019.csv' datatype='table' name='[__tableau_internal_object_id__].[datasets_894_813759_2019.csv_9E6306EEA7134527B341DBEE4D4DC983]' role='measure' type='quantitative' />
      <column-instance column='[Economy (GDP per Capita)]' derivation='Sum' name='[sum:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health (Life Expectancy)]' derivation='Sum' name='[sum:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0uyc1jo16a2w8519h8igw0pscfnv].[sum:Economy (GDP per Capita):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0uyc1jo16a2w8519h8igw0pscfnv]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0uyc1jo16a2w8519h8igw0pscfnv].[sum:Health (Life Expectancy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0uyc1jo16a2w8519h8igw0pscfnv].[sum:Generosity:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Country (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan, Bangladesh, India and 2 more&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia &amp; New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bahrain, Israel, Kuwait and 4 more&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Argentina, Brazil, Chile and 11 more&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Armenia, Bulgaria, Georgia and 1 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Singapore &amp; Thailand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia &amp; Myanmar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan, South Korea, Taiwan&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Canada &amp; United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Czech Republic, Slovakia, Uzbekistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt, Iran, Iraq and 3 more&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Austria, Belgium, Denmark and 14 more&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='datasets_894_813759_2015.csv' id='datasets_894_813759_2015.csv_91310D1CE0D34F1AA4994EDB49C0A4C7'>
            <properties context=''>
              <relation connection='textscan.1nvh7gd0qm3xp2126saar16yctu1' name='datasets_894_813759_2015.csv' table='[datasets_894_813759_2015#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:L159:no:A1:L159:1' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                  <column datatype='integer' name='Happiness Rank' ordinal='2' />
                  <column datatype='real' name='Happiness Score' ordinal='3' />
                  <column datatype='real' name='Standard Error' ordinal='4' />
                  <column datatype='real' name='Economy (GDP per Capita)' ordinal='5' />
                  <column datatype='real' name='Family' ordinal='6' />
                  <column datatype='real' name='Health (Life Expectancy)' ordinal='7' />
                  <column datatype='real' name='Freedom' ordinal='8' />
                  <column datatype='real' name='Trust (Government Corruption)' ordinal='9' />
                  <column datatype='real' name='Generosity' ordinal='10' />
                  <column datatype='real' name='Dystopia Residual' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='datasets_894_813759_2019.csv' id='datasets_894_813759_2019.csv_9E6306EEA7134527B341DBEE4D4DC983'>
            <properties context=''>
              <relation connection='textscan.1nvh7gd0qm3xp2126saar16yctu1' name='datasets_894_813759_2019.csv' table='[datasets_894_813759_2019#csv$]' type='table'>
                <columns gridOrigin='A1:I157:no:A1:I157:1'>
                  <column datatype='integer' name='Overall rank' ordinal='0' />
                  <column datatype='string' name='Country or region' ordinal='1' />
                  <column datatype='real' name='Score' ordinal='2' />
                  <column datatype='real' name='GDP per capita' ordinal='3' />
                  <column datatype='real' name='Social support' ordinal='4' />
                  <column datatype='real' name='Healthy life expectancy' ordinal='5' />
                  <column datatype='real' name='Freedom to make life choices' ordinal='6' />
                  <column datatype='real' name='Generosity' ordinal='7' />
                  <column datatype='real' name='Perceptions of corruption' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Generosity]' />
              <expression op='[Generosity (datasets_894_813759_2019.csv)]' />
            </expression>
            <first-end-point object-id='datasets_894_813759_2015.csv_91310D1CE0D34F1AA4994EDB49C0A4C7' />
            <second-end-point object-id='datasets_894_813759_2019.csv_9E6306EEA7134527B341DBEE4D4DC983' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='datasets_894_813759_2015 (2)' inline='true' name='federated.1dtt48d1ndskd118b31p31s2bmvb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='datasets_894_813759_2015' name='textscan.0d499yy1a53qkh10r5kaf0il14d0'>
            <connection class='textscan' directory='C:/Users/matt/Desktop/dataProjects/tableau_banter/world_happiness' filename='datasets_894_813759_2015.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0d499yy1a53qkh10r5kaf0il14d0' name='datasets_894_813759_2015.csv' table='[datasets_894_813759_2015#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='integer' name='Happiness Rank' ordinal='2' />
            <column datatype='real' name='Happiness Score' ordinal='3' />
            <column datatype='real' name='Standard Error' ordinal='4' />
            <column datatype='real' name='Economy (GDP per Capita)' ordinal='5' />
            <column datatype='real' name='Family' ordinal='6' />
            <column datatype='real' name='Health (Life Expectancy)' ordinal='7' />
            <column datatype='real' name='Freedom' ordinal='8' />
            <column datatype='real' name='Trust (Government Corruption)' ordinal='9' />
            <column datatype='real' name='Generosity' ordinal='10' />
            <column datatype='real' name='Dystopia Residual' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0d499yy1a53qkh10r5kaf0il14d0' name='datasets_894_813759_2015.csv' table='[datasets_894_813759_2015#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='integer' name='Happiness Rank' ordinal='2' />
            <column datatype='real' name='Happiness Score' ordinal='3' />
            <column datatype='real' name='Standard Error' ordinal='4' />
            <column datatype='real' name='Economy (GDP per Capita)' ordinal='5' />
            <column datatype='real' name='Family' ordinal='6' />
            <column datatype='real' name='Health (Life Expectancy)' ordinal='7' />
            <column datatype='real' name='Freedom' ordinal='8' />
            <column datatype='real' name='Trust (Government Corruption)' ordinal='9' />
            <column datatype='real' name='Generosity' ordinal='10' />
            <column datatype='real' name='Dystopia Residual' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_0C06C20AC7A149DAB7AEE484861117C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_0C06C20AC7A149DAB7AEE484861117C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Happiness Rank]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Happiness Rank</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_0C06C20AC7A149DAB7AEE484861117C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Happiness Score]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Happiness Score</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_0C06C20AC7A149DAB7AEE484861117C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Standard Error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Standard Error]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Standard Error</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_0C06C20AC7A149DAB7AEE484861117C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Economy (GDP per Capita)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Economy (GDP per Capita)]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Economy (GDP per Capita)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_0C06C20AC7A149DAB7AEE484861117C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Family</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Family]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Family</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_0C06C20AC7A149DAB7AEE484861117C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health (Life Expectancy)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health (Life Expectancy)]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Health (Life Expectancy)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_0C06C20AC7A149DAB7AEE484861117C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Freedom</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_0C06C20AC7A149DAB7AEE484861117C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trust (Government Corruption)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Trust (Government Corruption)]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Trust (Government Corruption)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_0C06C20AC7A149DAB7AEE484861117C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_0C06C20AC7A149DAB7AEE484861117C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dystopia Residual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dystopia Residual]</local-name>
            <parent-name>[datasets_894_813759_2015.csv]</parent-name>
            <remote-alias>Dystopia Residual</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[datasets_894_813759_2015.csv_0C06C20AC7A149DAB7AEE484861117C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='datasets_894_813759_2015.csv' datatype='table' name='[__tableau_internal_object_id__].[datasets_894_813759_2015.csv_0C06C20AC7A149DAB7AEE484861117C0]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='datasets_894_813759_2015.csv' id='datasets_894_813759_2015.csv_0C06C20AC7A149DAB7AEE484861117C0'>
            <properties context=''>
              <relation connection='textscan.0d499yy1a53qkh10r5kaf0il14d0' name='datasets_894_813759_2015.csv' table='[datasets_894_813759_2015#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                  <column datatype='integer' name='Happiness Rank' ordinal='2' />
                  <column datatype='real' name='Happiness Score' ordinal='3' />
                  <column datatype='real' name='Standard Error' ordinal='4' />
                  <column datatype='real' name='Economy (GDP per Capita)' ordinal='5' />
                  <column datatype='real' name='Family' ordinal='6' />
                  <column datatype='real' name='Health (Life Expectancy)' ordinal='7' />
                  <column datatype='real' name='Freedom' ordinal='8' />
                  <column datatype='real' name='Trust (Government Corruption)' ordinal='9' />
                  <column datatype='real' name='Generosity' ordinal='10' />
                  <column datatype='real' name='Dystopia Residual' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name=' top 50 per region'>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_894_813759_2015 (2)' name='federated.1dtt48d1ndskd118b31p31s2bmvb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1dtt48d1ndskd118b31p31s2bmvb'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='None' name='[none:Happiness Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='Sum' name='[sum:Happiness Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Happiness Rank:qk]' included-values='in-range'>
            <min>1</min>
            <max>50</max>
          </filter>
          <slices>
            <column>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Happiness Rank:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dtt48d1ndskd118b31p31s2bmvb].[sum:Happiness Rank:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Region:nk] / [federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Country:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{55D80301-C5F0-4753-8E82-6B3428442602}' />
    </worksheet>
    <worksheet name='bottom 25 hapiness score'>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_894_813759_2015 (2)' name='federated.1dtt48d1ndskd118b31p31s2bmvb' />
          </datasources>
          <datasource-dependencies datasource='federated.1dtt48d1ndskd118b31p31s2bmvb'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='None' name='[none:Happiness Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Sum' name='[sum:Happiness Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Happiness Rank:qk]' included-values='in-range'>
            <min>133</min>
            <max>158</max>
          </filter>
          <slices>
            <column>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Happiness Rank:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1dtt48d1ndskd118b31p31s2bmvb].[sum:Happiness Score:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1dtt48d1ndskd118b31p31s2bmvb].[sum:Happiness Score:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.1dtt48d1ndskd118b31p31s2bmvb].[sum:Happiness Score:qk]</rows>
        <cols>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{281661C8-6DB1-4CBA-9CBD-368F7E0F6866}' />
    </worksheet>
    <worksheet name='bottom 50 per region'>
      <layout-options>
        <title>
          <formatted-text>
            <run>bottom 50 per region&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_894_813759_2015 (2)' name='federated.1dtt48d1ndskd118b31p31s2bmvb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1dtt48d1ndskd118b31p31s2bmvb'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='None' name='[none:Happiness Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='Sum' name='[sum:Happiness Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Happiness Rank:qk]' included-values='in-range'>
            <min>108</min>
            <max>158</max>
          </filter>
          <slices>
            <column>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Happiness Rank:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dtt48d1ndskd118b31p31s2bmvb].[sum:Happiness Rank:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Region:nk] / [federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Country:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{44926623-27AF-4EC6-9266-2B942BD723F3}' />
    </worksheet>
    <worksheet name='map of bottom 50'>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_894_813759_2015 (2)' name='federated.1dtt48d1ndskd118b31p31s2bmvb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1dtt48d1ndskd118b31p31s2bmvb'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='None' name='[none:Happiness Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Happiness Rank:qk]' included-values='in-range'>
            <min>108</min>
            <max>158</max>
          </filter>
          <slices>
            <column>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Happiness Rank:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1dtt48d1ndskd118b31p31s2bmvb].[Longitude (generated)]' field-type='quantitative' max='24087741.242929995' min='-20522901.529511601' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1dtt48d1ndskd118b31p31s2bmvb].[Latitude (generated)]' field-type='quantitative' max='12529232.187326983' min='-9916375.4598581642' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1dtt48d1ndskd118b31p31s2bmvb].[Latitude (generated)]</rows>
        <cols>[federated.1dtt48d1ndskd118b31p31s2bmvb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{348BC0AF-B8F4-4142-AB42-FF51CAEA2E87}' />
    </worksheet>
    <worksheet name='map of top 50 '>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_894_813759_2015 (2)' name='federated.1dtt48d1ndskd118b31p31s2bmvb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1dtt48d1ndskd118b31p31s2bmvb'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='None' name='[none:Happiness Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Happiness Rank:qk]' included-values='in-range'>
            <min>1</min>
            <max>50</max>
          </filter>
          <slices>
            <column>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Happiness Rank:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1dtt48d1ndskd118b31p31s2bmvb].[Latitude (generated)]</rows>
        <cols>[federated.1dtt48d1ndskd118b31p31s2bmvb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{61D5CE0D-3A62-4DCC-98B2-0036A343933A}' />
    </worksheet>
    <worksheet name='top 25 hapiness score'>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_894_813759_2015 (2)' name='federated.1dtt48d1ndskd118b31p31s2bmvb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1dtt48d1ndskd118b31p31s2bmvb'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='None' name='[none:Happiness Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Sum' name='[sum:Happiness Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Happiness Rank:qk]' included-values='in-range'>
            <min>1</min>
            <max>25</max>
          </filter>
          <slices>
            <column>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Happiness Rank:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <reference-line axis-column='[federated.1dtt48d1ndskd118b31p31s2bmvb].[sum:Happiness Score:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1dtt48d1ndskd118b31p31s2bmvb].[sum:Happiness Score:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.1dtt48d1ndskd118b31p31s2bmvb].[sum:Happiness Score:qk]</rows>
        <cols>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{39C3F4B1-5278-46F7-B48E-30153BFABC9C}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name=' top 50 per region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0uyc1jo16a2w8519h8igw0pscfnv].[Region (group)]</field>
            <field>[federated.0uyc1jo16a2w8519h8igw0pscfnv].[none:Country:nk]</field>
            <field>[federated.0uyc1jo16a2w8519h8igw0pscfnv].[none:Happiness Rank:qk]</field>
            <field>[federated.0uyc1jo16a2w8519h8igw0pscfnv].[none:Region:nk]</field>
            <field>[federated.0uyc1jo16a2w8519h8igw0pscfnv].[sum:Economy (GDP per Capita):qk]</field>
            <field>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Country:nk]</field>
            <field>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Happiness Rank:qk]</field>
            <field>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C15B690-7FB1-46A6-891A-AB22E78B3FB9}' />
    </window>
    <window class='worksheet' name='map of top 50 '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0uyc1jo16a2w8519h8igw0pscfnv].[none:Happiness Rank:qk]</field>
            <field>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Happiness Rank:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9C746E50-9905-4252-B52B-77434E382FA4}' />
    </window>
    <window class='worksheet' maximized='true' name='bottom 50 per region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0uyc1jo16a2w8519h8igw0pscfnv].[Region (group)]</field>
            <field>[federated.0uyc1jo16a2w8519h8igw0pscfnv].[none:Country:nk]</field>
            <field>[federated.0uyc1jo16a2w8519h8igw0pscfnv].[none:Happiness Rank:qk]</field>
            <field>[federated.0uyc1jo16a2w8519h8igw0pscfnv].[none:Region:nk]</field>
            <field>[federated.0uyc1jo16a2w8519h8igw0pscfnv].[sum:Economy (GDP per Capita):qk]</field>
            <field>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Country:nk]</field>
            <field>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Happiness Rank:qk]</field>
            <field>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC3FFC64-ABE0-4259-AC7F-B12B83C8FA44}' />
    </window>
    <window class='worksheet' name='map of bottom 50'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0uyc1jo16a2w8519h8igw0pscfnv].[none:Happiness Rank:qk]</field>
            <field>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Happiness Rank:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D97AF51-9CF4-4F25-B306-4D7B059AB81B}' />
    </window>
    <window class='worksheet' name='top 25 hapiness score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Country:nk]</field>
            <field>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Happiness Rank:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D3F50CA-B65A-4C0D-97D8-8E6D49DA0B84}' />
    </window>
    <window class='worksheet' name='bottom 25 hapiness score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Country:nk]</field>
            <field>[federated.1dtt48d1ndskd118b31p31s2bmvb].[none:Happiness Rank:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{494F3E23-23E7-4F69-AB55-428B297222BE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' top 50 per region' width='192'>
      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
      CILwQBjA/wdOWKPez2/F+wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='bottom 25 hapiness score' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='bottom 50 per region' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z5wc13W3+VRVx+menHNEnMEMcp5BIAEiMokiJVFUsGxJuw7rV5ItyWu/
      a69/q/XKu9bPQZZIWyJFiiIpUSQAEiAyiBwGGEzG5By7e6Zz7qraDwM0CJFEIDAACfTzBejp
      qrq3qu+pG879nyOoqqoSI8YDiCAIgnivKxEjxr0kZgAxHmhiBhDjgSZmADEeaGIGEOOBJmYA
      MR5oYgYQ44EmZgAxHmhiBhDjgSZmADEeaGIGEOOBJmYAMR5oNB/8oKoqsb1xMR4kNH/4h/Hx
      8XtRjxgxcLlcJCQk3NUyrzEAQRDIzs6+qxWIEeMKqqre9fb3oR7gg6iqysRAM+8dOosxu4JH
      Ny9Hd4MLqoqCooIk3Wh6EaL+2HFS51WTn3yjq/4BATuHTzWzpLqaeC24x7vY+c5BfIoIcak8
      tn0bmYn6615CkWUQRERRuLWyb5Hx7npG5Ezmz8hGuINF2Yfa8ZlLyE3S3rmLfoZRVRVZlpEk
      CUEQUFWVSCQCgEajQVEUFEWJHq/RTDX96xiAim/4PD/+71P84H//M9SxIYKqikZRkBUFUZIQ
      BQFZlhFgqtFrJMbOvsnzl1L42+fWopFEZFVFQAVBBEVGVkCUJCQpTPOZ48woWE5+sg5VVVFk
      GUVRESQJSRQuN1JQFBVJo5kqR5ZRPJOcOHGWOSunDMBj66UvksXffvvxaN0VOYKsKCBIaCQR
      VJXI5UYviQIHf/ljnFVf4IlFBUiiiByJoCKg0UioqoKKgKooiKKAogKKMnWuJCLcdEtWaekb
      JxSxIJdloRGEyz+CioqAAFNlqcJUOYqCKEoIwtTfFUVFlKSrxykqqiAgSRJJOTNIFMToc1Mh
      +ps8iOzatYvz58/zd3/3d+h0Onbs2IHNZsPn87Fu3Tr8fj+tra2oqkpjYyP/9E//BNzAAOoO
      72fR9m+QYpCgqJBIcJKXn/8FEWMCE744/uSPtvHP3/8eS7Zspe30WRY//ad4zp2ju8vIWxkG
      Vpe6+c+dg6T5epi5+TlC3ceZcIcZdun5i+88e01pst/B7l1vYXP6GbIL/C/ffppXfvx/kVq1
      DnvnOXLXfJUNRT6ef2k3mRnxWF2ha85XFJlQKASCgFajcnbv27SOuhkcGOPJb/85zrOvc25I
      xmxKZu3qKi5c6mBifCdJ6mZKxF7eOdOLGHRRuubz5Fr28v5oCtbGZtZvn8u7x0dYVZ7O2cZR
      /vpvvkO66eZ6LNU7gKwvptg4xLBPptCs4eTxfcjeIAlly3F3nSAomXHarOjTstBGPIjJc9iw
      OItjh07hU1WE+Fw2LJvNO7//NabkXJxOLzXbn8LfvBtf8XZKxT4OnG5FUBWSiypYOa/41lrO
      fcKqVauw2+3Rz4888ghGoxGXy8X+/ft56qmnWLZsGQ6HA7PZjF4/NUK4zjhFxecNYIozRv/i
      aD3K+x0uFEVhsuM4HVbQJmSzYduTbFycw/BEgFUrVjBj8Xqe2bYaHeCacPGFv/pHtiwto6So
      CCQB50A9Q/ZrS5P0JsoKC0AUcY12MDQRQBeXwMoNj7FtzRxGhye4cPggszd/ma9/4TEyEq5t
      hGOXzvDqq6/y210HsPtECmeUopNAdY/R1j+ByzGJPimPrY9tZ8aMOSytmM3KLU+xYVkJe3fv
      JhhR0AlBTh6rIwhYXRI/+Od/oDzVTEZRBY8/81VyJRuOUOSmf5T+5k6yZ+ZRWJZOW/MQqgoe
      2yTz1j/KwplZYM5k4yObeGRJAUmlK3hk06OYVBvO7jo6HRFkWWakqRU7ApnFFWzctJn1VenY
      vFd/I8mcRlaCDjkSort/4Kbrdr+RlpZ2zWej0cjExARvvPEGa9asiQ6L3n//fdavXx/txa/T
      A4jMmFPKbxub2VK+EhQVVYXsucv5429uQVAVQj4Xe/7wNEEAlehyanrRbLLjtdg6j/JurYvv
      /cXX2PFvP/lQaRMDtew6Nc5f/sXXee+X//aRNYpEZCRRuDxEuZac8lV8/euXh0DuAf7v14/z
      7F/+KXNSBAaBTc99l+GuJn79kx+x6qv/AxCuLvsKZjY+9SXm5yVNdZHv/ZziWXOJ10t4+aSo
      dI2MEJw4yqAANp+AohYSn5lHsv768yNFhblL17OyxDRVx0j4Y8voPX8O09xVbDGF2X+q/hPX
      9n6ju7ubEydO8OUvf5m4uDgAvF4vXq+X1NTU6HHXMQCBotVPMeOFn/FvP28mTkzhya89RNHu
      /5d/+ekg6cmJrFm/KTqZEMWpcXt8SQWaHb/m1V0S62eJaKSppmpMykC2HuD114MMWFxUCAKS
      RhMdsxrjM8Gxl9feeIuRIQcll78XAFEU0YgCi9dU8x+/+hX20mzcgam5B4AgiIy1nuCFFyxT
      k+BNq8k0uXn79ddgrJf8R6o5/d6btAy7wJBMvFFL2qIq/nvHbzCFH2fzttX88oWfcq4gm8JZ
      S0gXNUiXry6I4tQcApA0Wm569O8bRE5ZxOaackQBWo4dYMSvIIhXG7945f+CwJW5uCiIJJct
      wL5zN++2mtDHZ1O9suLq2F4QEQQQxKnJnjnFyIljB+kzSkyG426ydvcXqqoSDoeR5alhsCiK
      HDt2jKeffhpJkohEIkiSxLFjx6ipqblmDifEokLE+LQwMjJCTk7OLZ8nyzJvvPHG1BwQ2Lhx
      IydOnMDn8wEwb948Fi5cSENDA1VVVVEDEARBiBlAjE8Nn9QAPimCIAjX9QPEuDVkWUaW5Xtd
      jc8sV4Ywd5OYAdxBFEWJOl9i3Dr34vld3xMsRwiGr1RIRGfQxbaP3gJyJIysqMDlCb8ofGgS
      rSoyqiBxqw5pVVFQAEmM/SK3w3UNYLz2d3z/tU7WLyxEo8vk0S9uIv5u1ew+4PThd/CLiYjI
      BHWpbKpe+CEv8njTASxZm6jMvLVrh90WhgNxFGfe3c1jn1ZcLhe1tbWsWbMGSZJobGykvr6e
      xMRENm3aFHV8nT59mvj4eCoqKoAbDoEEZix+iK8+twqASMjBroMXeXTLGrrrjuJJm49m4Bzk
      zqXnXCM1T66j7f19NA8HWL1hM0WJQfYersUQcuA0FLJ982oEr4X9e/biktJ5ZMsG0k33714W
      bVI2yxYtRyMo7Dt4CEUN0d05StmMIjxj7XjMM6M9gqrK9F+qo33QgSmjkFXzyxjtbqK5e4yU
      gjksmp3HaP8QxjiFttEwCwviQJSQQ14az5/D6hMpX7iE3JQHcyn00KFDDA8PU11djSRJGI1G
      nn32WXp7e9m3bx+PPvoo4+PjtLW1kZ6eHjWAG/SfCm1n3uOFF17gxTcO4A+7OXLsLKAy2HKW
      9lEnnbVHeGvnQQy5+XQe/g1nnTl8cftSfvv8C4y6Jjl2vIEV254iZeIMu061ceD1X2Ou2sjS
      vBCvvX18+p/MPSRsH+bA/n3s2bOH9MJyJCFMf98QAD5rH1bflSNVnH119AQz2PDwWhyWfgA0
      8RnUrFmDfuwSw0GV0a4m6ntdLCgvI+weZ3gygKrIZM9cyOols2ltab43N/op4IknniA5ORmY
      2tVcVlaGz+ejs7OT4uJiFEXhyJEjbNiw4ZrzbtADiMxevplvXu4BQt7BDx8iaFiwfjsbKhPY
      +e9vUbHxGYyJAjkGG0OToIlPIsGgZ2ZJPr/t6yXU0YlROMCQHubMmXNHbv7TijY5lw2LlkPY
      xeEj5wnOWPaxx06MhChfUYiIPLUhTwnS1ViHXzLiHhtglgckfQpLllZiEMBz+Ty/fZS6+gEM
      WoVBV2w+cIWJiQkOHDiALMuUl5dz8uRJKisrAQiHw9GdoTdcBYqEg/h8PgRBQhR06CI+JpwO
      hsYn0M2c8pQa9HpAy+yKUnZfuEBlXBrDoWw2poEc9OF0THDiQhuV67+Bx3kWT9F8nliaw5j9
      7i553XUUhVAoiKRMbdVFlVAifvx+N739Ixg/MO5PzdTQ0DJMQqGeSacfRXERlHJZsayYCwcv
      7/ERxQ9Nlp2WcQqrlpOjjjJc++DuBfogqqqSnJzMF7/4RQKBAG+++SZ5eXk0Njbi9XoZGBhg
      8eLFwA08wd6RVt46dAEASZvB9mceZrj2CA1DQUpyEkgorEQabUJbtJTCFB2qHKL57BGahgKs
      Wv8wqeoAP/yHF6hZtZSMWUuoWVhGxGfn2MEDWII6Fq1ay8ycpLvzVO4C4XCYcPjqvp2Btgt0
      jTgRJR2l5fPJSzVj6W3m0qCTvJwUEnNmE+frwxdXTJoxQlfzeUZcIhMeN088so6h9np6JyIU
      5iRjzixFto+TnJuNFgi5xrFEEsgyRWi4cBHMWSQkmZhRkHvvHsBtYrVaSU9Pv+XzZFnm9ddf
      p76+nlmzZrFlyxYOHTpEOBwmFAqxYsUKKisrEQQBm81GbW0tmzZtwmw2T68n2GNr5//576P8
      4w++OV1FfKr4QwO4FYL2AY6caQFUTNkzqZ5fdmcr9xngkxrAJ8VkMsW2QtxJbscAYtwbA4h5
      gu8gWq0Wrfb+XdadbrRabXTr8t0itmwQ44Em1gNMI4ocpruplvbBSZLzZrJs/gw0t6nZ9Vh6
      sZJBcYbpDtXy/kBVVUKhEDqdDkEQohNgURQxGAwIgkAoFCIcDmM0GqNajJgBTBsqjcf3Ec5d
      xJaty7ENDhFUQUIhFAyhChJ63dTjD4eCKKqATq9DQEWWVVQlgqDRIaEQDIVAENFqdcSl5lMg
      TAn3Q6EQqiqg1emQpjm6xaednTt3UldXx9/+7d+i1WrZsWMHgUAAp9PJ6tWrKSkp4aWXXsJk
      MpGdnc3mzZuBmAFMI0HGvHoeLs1CDgeJz8hAL8BI+0Vah+wEvW5mrdhEeqCLw3UDmHQy5vz5
      LJ8j8f7uSwSkMAtWrcXScJiRkA7VM0r2ws9R4DtHb9xS5ifYOHyuHVGNYM6Zxaqq0nt9w/eU
      6upqHA4HMOUJ/vznP4+qqoyOjnL27FnGx8d5/PHHKSgo4OWXX44uVsTmANNGAFQjggC9l87z
      u/9+nVFZob7hAn6/H1UI0tLQzfmWYbY+vpWNm7bhHLkEgD2gY/O2zWSaXLiEArZu3MDyOfl8
      cH1JjEsm1SgQDPrp7v8ID/0Dxgd1vgBjY2P87Gc/Y8eOHaxfvx6/3x89JikpKao7iPUA00Yi
      kmrFFYgwo2oVvpGpzQuiOYsNm7aiFUFW4MTBIUIRBZ0gT8UfQiAnNxcJiEA0wIAiKx+4tkpf
      XS3x5atYGBdm36mLd/3uPu1kZWXxrW99i/Pnz3P06FEAQqEQJpMJv98fmwNMPwKrllex771d
      SFo94ZCWEkFgfmkGO3e8g9GgpbRyOUvml7Bv504kSSWvfBWgoNFcEeGnYVbPsfPdfkSvhYzl
      yxEkzVTwgTQzx48dot+kxRU23NtbvceoqorX6yUYDOLxeIiLi6OpqYmZM2eSkJBAV1cXS5Ys
      4dChQ6xcuRKn04nROBXuJ+YI+xSjKjLDQ4MkpabSc+59dJWbmJ16//oZbkcU//bbb18jih8Y
      GKCjo4OEhAQeeugh9Ho9dXV19PT0sHHjRhISEmKi+E87qqow3NVIx8AkaYWzmVeWc9NhWT6L
      3AtRfMwA7iAxUfztMT4+TmbmLUrjbgO9Xh/bCnEniYnib4978fxiy6DTSDgcjoaIlMNhFFWd
      ikJ9k53ulLMrtrluOokZwDRy/PgRIpdXLy8dPc64rNB67jyemxx0qkqIoeGx6avgfcTk5CT7
      9u2L9iDhcJgzZ87Q3z8lL1VVlYmJCfbu3XvNCyhmAPcEFc94D71WH8M9vdht/Ry/cAk54ODU
      +wfZf+go464QoBCJKKhyhK7OFi6eep/Dxy/gl1UiARfnjx/m/RMXcIeUGxV433Py5Em6urqi
      UscTJ07Q1taGxWIBwGKxcPToUbq6umIGcG+RcY50cbbHQ0GaEdtAG3VdDpZUzUKOKJTMW8Ly
      +WU01TegyEGGhsZRVZnerh4KKldQlRGgbcRHW2Mj6bMXMSfPyIWGtnt9U/ec7du3k5R0VV24
      bt06Fi1aFA1Dk5mZyZNPPonZbL7mvNgkeJpRo/+qU0uYYTfna8eYufwRRECQEliyrAqDoGId
      76eh34VBUplwX7uaFJ+WRapZj99kQgmHGBwZIS6gIACpuTPu7k3dR8R6gGkkK06kbcCC2zFG
      f0ggRRRBm8RDj27D2XyCcW/kGqG7ddTBrPkLmVmQcf31fklDQWoSiQWzmF9ZTor5+vnQYnw8
      MT/AHeRDkkglSGtDPZM+mFW1gDSzjsnRMeKzMtGGXfSOhUnQhknMnhK6R/yT1NVdwphRSKJR
      JS87nZFRJ7k5aYxbbWRlZhLxWJlUk0gzRGhrasAR0jKzooK0+8AIblcU39TURFlZGdu2bePU
      qVP09PQgyzKLFy8mNzeX06dPc+nSJWbPns0TTzxBXl5ezBF2J4lpgm+Pe64J/mBqyRi3TiQS
      iT2/2+BTER36g5n2YsS4m0QiEQKBwF0t80OZ4jMyMu5qBWLEuEIkErnr7e+6q0Cu3gu8d7b7
      Y79XIkG8/qktqD5rG7/dffq6hakhL3t++0t2nbi9IK7+yUF27TyI78aH3jLd5/dxoftqLxgJ
      uji+501+8YtfUdc1/qHslNfj0qVWIpeFLNbuVsb9H3ZYqcEJWjpGUVV1SvsLoCr0NrfeRobK
      Bw9FUfB6vdc4uQKBQHROpqoqHo8Hh8NxzYbF6xqAb7yTCx2XXfGqSjjow26343R5kRWFkbNv
      8Q//vQeHy4ug0RMfZ0BVIng8XnweFw6XB/kDLcY90Ut9j52208fwKFNREzweDx6XE5fHR8Dn
      weF0EZFVVEXG43LgcHmIKCqRoB9/MITX40FGwmyOQwQiIT8Oux2vP4QcCeFyOLA7XIQiVxub
      HA7idNhxON1EZIVIyI/X58fldODxBVHVqWMcdjvdTWfoHL0SelZmz4s/ZTyhnK9+5WmyTJpb
      MoCBwYHLKi9wjQ7gCKmocgSvx43H40NRVdAmUlaUTiToY897e3C73YQVyJ1RxoMZ6PyTsWvX
      Ln784x9HG3x7ezs//vGPOX/+PAAdHR289tprvP3227z33ntRQ7l5R5iq0Hz6MG3jHobaW1n+
      zJ/hv9TKWLeOo2ezqZ4vcfz9JmoqTfzN/3ye7dtrOHfyHBv/5IcsKTADKiOt9WRVrkLXdoBL
      wz5mCG38/f/3JhtqKjh5uoUla6vprT3FnMe/SYn3IgebJzBEHKTP30LRxPu8O6wlbLHwxKMP
      cfLkReavnM3el1/Gb0wnu6CcytwIx2q78Fj70JY9zNe2LkYABlvPcLJ1lMnBDvJWf4lZgeO8
      ekZmxWwNZ1r8fPc7X+Hwq89j0WTg6xkj54pfKTjC+SGJv/zKTDRaiZxs43Ue0EegRHC73Wgl
      AV8ghA5wDHdyoWsMMeQicUY1CzMmOHQRFucFGRke4UJdHbOqltF+6iiLtzyC+YaFxACoqamJ
      iuJhKsjWtm3bogZRV1fHc889h8Fg4Gc/+9mti+JVQSAjK52Qx4McdNDaN8GSxUsoqFjOYxuW
      8UGdkj6tgA2btrKwyMz4xNTbVJX9XKhvIzcnj9wMI+ebOgEwZZWy9YnHqMw2MXvpJrYsn411
      YphD7x3E6Qvi83upa74EyHjlRL77g79iZvZUsxjtOsegUMbXv/IsW9bOJyk5DSNBQqEgbZc6
      mRpQqCSkZqAJ+wiHvDR29AKQN2s+257cisk/iaO/mUZ7Cs999cssKy+4+lAiIVRRuprP91YJ
      OKi/WEddXR3t/eOggjEhGSnixxv20dc5fPlAgfSiORSVFLN2zRqyE+9f1dd0kZKScs3nkpIS
      JEmKfo6Pj6e1tRWLxYLP54uqx276l1VCfl769Q42fuErPLl+4dQfRQFVlm9qe2/AaaFtIoKr
      8zTDIQN9TXV87IKXIKI1JrJu+xf4s//xQ/7ma1sAifzSMsy6q1XWag2okSARWUGOyBzZ+TqG
      2Wt57qktJEczz4R597e/pWjVY3xh+3rMuo+5P0VBURVkWb46zDHlkCk66LM6UBWZUChCOODD
      4w+hREK4PF6ue+txaVTXrGHt2rUsmJUPApw/X09V9QY2bVyF/g99BqqKoqrXv2aMT8SmTZuw
      2+2cPn0aSZKiCd6vOwQStToG6w/ygv8Ss5esY3aOmd+++jop8hhxczTEFVWRuvMlXtlhYFtN
      MmaTAUGUiDdPjV51xjhk7VSDdY50kF21jc9/fjWKb4Kf//t/MezXYIozAgKGOBOSCKLegFGf
      xJrNq3n5tf+kKSuLwooV5OuNxGmnqiuIGkwmI5mli6m6+Bo///kLFJcvJ6+oiPcO7cSVZQAx
      8/J2Ag3FRVkcffe35JrDSPFVaHQGjHotIGIymzDmzGFx+il+8cJL6FwucmZeeXMY+eLXnuSN
      37/MWaOB4vnrSLcd4dDkXP5khcr/8XozP/r+/0rcx7yw9bqr3llJqwMBMpMMHDu0j3iziKrP
      A0FCpxVAEMkzwa4977FoxXp0Ov19LX+8k6iqit1ux+fzMTk5SWpqKl6vF5fLRTAYxO124/P5
      mDVrFg6Hg1AoFM0ZFvMEx/jU8Ek1wYqi8M4770TH9WvWrKGurg632w1ATk4OFRUVHDt2DL1e
      z5o1a66EUIxthYjx6eGeZ4q/Ekouxicj9i65Pdxu911/hh/yBN9NC7zfiG2Guz0ikUg00+Pd
      4rqTYDnkx+4OkJicPBXKL+TD7vaTkJSCEvCgauMw6qYmjKoSwe0NkhB/JWy3StDnRdUakeQg
      IbSYDB89Wwz6XLh9U8tSks5IUoJpWieASjiIL6RiMhmmtZyg30swPOV11OiMGA3a2MT2U8Z1
      l0GtF3fwzW//b5weDICqcmnfi/zRn3yTurEIR37zUw60WKPH+p19/J///MIHzpY5/Nq/c7DZ
      Svuh3/Dy4daPLefEGz/hX19+m6NHj3K+qYcbRtbxT7B79wGcn/BlO9F5kn99eTfT/a4+f/Ig
      DY1NNDc3MzjuuPEJH0HEO05738Qdrtn9h9VqZc+ePUQuR904f/48v/rVr3jzzTfxeDwEAgFe
      fPFFXnzxRd5+++2b9QSLLFmzgsYz9VTnLaChX2XhrERAonTefFxJBkLeCfa/+w5DDifO0FTG
      89764xy+0MFA+whLF169Wsg7wfv79jLoFln18GZm517WcEoGFlZv5IklhQBEAi4OH9hN94iH
      /MpVPLy0jMZj+7jQbaFk3ioy/Rf4zW8O0D5i44nHt1OcbibgGuPgewcYcYapWLWBRTmw92gT
      cTo/A3aJxx7fitE/zJ73jmAdH8SvL5+Gn+FaNAkZLFy0HK009d5X5RBtDbX0WX2Y0vNZNTuZ
      NouGuUUp+Md7GNfmERpvw2GbwCMksmxJJa2nDnJhUMPgjJnUVC/gY9wYDzznz5+nr68PRVGQ
      JImUlBSeffZZ+vv7OXjwIIsWLaKkpISampqoThhuwhFmzKkgMt5EMDBJyJRGsgigMtJZT4/F
      zbldLzGRtoIvP7WJeC34J7v51dsXePLZr7B0ZtYHrqRQt/8NRo1zWDs/mzfe2Hn1DSz7Ofbu
      G7zwwgv8/v0GQKJk3jK2bVpB/Z7f0js4xN5TPWz63OeYlWFmxoLVzJ5VwRef+yLF6Zc3C4g6
      KpavZfPqGex76x0mnBOcOtfM3JptpNhauDg0yq7f/JqUqg187pEVGCSmnSuZ4vfu3Utzn43x
      tvM4zGU8suEh3JY+BGMyI53NKCpcahsgKV7DyIiFuUtrWFik4ULzKFWLljBr3nIejjX+67J5
      82YSExOBqblsfn4+VquV1tZWZs6cic1mo66ujldeeeWayBA33AskaRMo1AVobG3AXLwAV9f+
      q18qYXr7R5hTMxNR7EYUIDDZDyklpBg1SKL4geFMiN72PkYTE2nwG1m+ZP4HCjFSs+2ZaA/g
      GG7g968fpmBmJt5AAEw5bFhezK5XfokpdyFfWF/8oXraei7yu0PtlOQYCAWCRBSIM6eSYNYj
      iQKK6mLYCivz0hHHOrjNTEU3xZVM8Vd6gOZTncxelo4gimgkAdAyM02kz+HGp0kgSQKtKR6z
      XoOckY/QNwjc4v6jGMDUitK5c+fw+/3odDrmzJnDggUL8Pv9/OIXv+CP//iPgZvZCiFILFqY
      wW9eq2fhwoJrvxO1lBTn0VB3nrHhITwhMKQUIk200zU0yqjN+YGDdcyumIGijWf5yuXkp34g
      x5Wq4HZMYrFYmHR6cNtGUJOLWVY5C70EQZ8XTVohn3t8E5Pt57BGDJjFEMNDYwQuTzInhwZJ
      KKmialYhkvBRS2nx5GcINFzqZGRklNBdEB6pkTAupxOn04kvECIzWaS5fYBJ6wgTrqn+L3/u
      HNoP7SahcA4ASiiA3WGnq6mRhNxCBK2OgMOK0+UhFv3n5lBVFYPBwKOPPsq2bds4ffo0brc7
      mkMsISEhGj9I+vu///u//7gLiTojyakZFJYUoTOlsXBGDvGJKeTlF5GcGE9GVh7l8+cTGGzF
      LiSzsGImpaWzmZFnovHSACXlVZQUFZCWkkhaRg4VCxaTGBylpXuY5NwispLNCIDeoMM2Msjg
      4CCTPonyqvno/CNYQyYWVlWSl59LYLyHxvYRKqs3MrMwmxkFKbRf6iY5O5d4g5aUnHx8I12E
      TDlUls8iNzeHtNRUcrLTMJniycgpYOH8cka7WlATCyifU0ZOevIdDYuhKEr0wQKIIRc9AyNY
      rVbCkpncoiLClj5G7CFC4QCzykpANDA4NMb8hbPRqCq9nS24PX40qaVUlKQj6uLRRyYYnAiS
      mZl6X4fx8Pl8mEy3nvxPlmVee+01WltbGRgYIDs7m/3791NbW0tjYyPLli3D4/GwZ88e6urq
      yMrKYs6cOfzoRz/6h5gn+A5yIz+A/3IEOEVVSC2oYvGcHBpOvkc4tYolc3JBVai9WM+ShQs/
      9hr3M7FM8Z9xIpFIzBF2G1gslrsqiYyLi4uFR7+TaDSa6DbbGLeOVquNpi66W+cGapoAACAA
      SURBVNzPQ8oYMW7IdQ3A2XOGH//7qzhllUjIzutv7rnhBeVwAKfbD4B7tIl3DjfckYpODjTy
      s5/+F53jUwozJeTm0I7f8PqOQ3g+sKJj6T7HjkN3pszbZailBXskljHmbqAoCk6n85rNdFcS
      513B7XZjsViuiT10XQPwW/sZHmhm/7lBlIiXM7UNU+L4gBfL+DgOjx8VFb/biT8Ywm6bpL/h
      XX70H7/DYrXjdQxR19yD3WZlwuFBZUrEbrWMM+n0oqoKXpeTQDCIw+7E7/PgcruxWS04vR+M
      D6PQeu4MIdnN6YvdoMr0NR7nQKuLtdWLEfwufIEADocDQWsiMd7A1F4kF5ZxC25/iEjQh9Uy
      jsU2SVi+OwuKk0PDeBUVORQkLEdwOd0oqoLX7WTSbicQnlLTBQI+PE4HDpf3lkT3Ma6yc+dO
      fvKTn0TnYJcuXeJf/uVfqKurA6byB7zyyiscPnyY3bt337wjrHjFZsbO7SM4byq1vBxy89rz
      P0XKKcPSP8jWr32T1lf/mfGUckY7bMyfF8Q64uHCxQ7K88E62EXtGZmTZy/xje9+l+bdv2ZC
      m4JrdJjVn3uGxld/SjCzBJtNx+ICK8et6SxKDVI/pOF73/sKcYAastPa66R6Yw17DzcQeHgm
      fd3d2CxWmlo68bceoV+fisPmY9PyQk61waoZRl56+U3iswvILptPiWaUs51WJvtbSV/2DJ9b
      dfciKtsu1dLgBkE1s2ZpIXXnGxC0Iq6Ikc1rFrH3rV+Tmj8Xp2WUqo2fJz/+rlXtvmHt2rU4
      nVf9Tkajka1bt0YN4ty5czz66KPk5eXxyiuv3LwmWNIlU1MqcqR1akOWb7CWNuby7OefYktl
      IvtPt6HKEYTUcv7uH/+c6vmV5JfNZ/PGZRiBjKI5bHzkEfKMXoaGhth/8gI+xyQ+u432/jGU
      UBBT0Ur++nvPkoCWkvJFPLJhHaLLhv9yHZyjffT7dKQmxhG2djHgkJhbWU7BzCo21CzGKIVR
      4kv46+/8KTmXBeVdFw+h5NXwxaefYt3CUuISkpA9dnw+N81d/Xfuyd8UYfRpZTy8ej4aSY9Z
      p2C3O+nqGwAE0vJnU129mup5GUxOR7CjB4A/3EZdVFR0jSg+EAhEj0lMTLyVqBACc9c+Qsex
      vURUEPVGhKCHsKzg9viIizMgSDpKS4uRAEGUUOWPzoMlihrikwr43Ff/iO/87f/ksaXFiPo4
      SovzrlMRlb7WRoyJZuobekg0yDR1Df3BMToKS4vRS1f3NxjizIQDHmRFIRz2s+f3b1Fa/ThP
      b1mD6a5vqtGSnZ2GIICjsw5f5ny2bn6E3OTPfkTnzwqiKEbDLvp8vqhxXF8UrzcRb9SiNWWz
      NEdLvUOPMXsR6wqbeP6FF1DEJL64aQZ1/YkYtFONz5xdTm7kl7z8+gHWLTaQaFZAEDAnJJGY
      lsemFbn817/9lKyMDJaur8aUkIhOmmr+urh4zAYNgqghMTF+yijUIH2jXh77/NeZl2tiqNjA
      jqZ+xGUGEi+L7w3mBFTd1K1IWgOJZg1FVavJa3+Nnz/fyewlaykry+PYu2+SmyBjSKicjmf8
      IXRGAxIg6fRoLttmXHo2lmPH2N+biCcydd9XBNqiVo82ti53y6iqisViwe12MzY2RlZWFk6n
      k4mJCYLBIHa7nYqKCg4cOMCiRYvw+XwYDAYgJoqP8SnidkTx+/btiw5rVq1aRUNDAx7P1Iph
      VlYWS5YsobW1lcHBQVavXo3ZbI6J4mN8urjnovgYt4csy7H8ALeBLMvXrNvfDWIGcAdRFOWa
      yMMxbo178fxiU65pJOT3E4mNMD/VxAxgGuk8fQZLONYj3A1GR0fZtWtXdAgaCAQ4fPgwPT09
      0c/79+/npZdeora2NrpMHzOAu4BrqJsByyhHj9YSiPi5eOoIe/cdoG1wAlVVmRzu4OC+fRw5
      cohR172u7WeTpqYmhoeHo4Kk2tpaxsfHmZiYcuBarVZKS0t57rnnaGpqis41YgZwFwg4Rqlr
      GaBq6QL0qKQXzGbxoko6mutBdlDbOE71wxuZlRRi4u6myLpv2LhxIwkJCdHP1dXVVFRURCNA
      5OfnU1JSwuTkJHq9/uaiQ8e4U0jMXbCQJKOGoLWPlo4xUuL12FxeCExiyi5DLwkIYixs1nSh
      qirNzc00Nzezffv2qCc41gPcFQTEy28in32C+JxiCrJTp7prQzruoWbGrVaGRmMBsKaLoaEh
      +vr6eOaZZ0hISIj2DDFH2B3kDzXBjtExdBkZiO4JQnGpJOhEUEK0NzcT1KWQmKCjMDsb98Qw
      HX3jiJ5BtHMfp+IBTdR5u5ni29raKCoqYuvWrZw6dSoaKGvBggVEIhG6u7sxGo1otVqefvpp
      kpOTY57gO8ntBse1XDqGI6OGmal3sFKfIe55pvgYt4cgCNeE3btVMueuIfMO1uezyO08v09C
      zADuIDFR/O0RE8XHiHGXib2uppGm0/vptQWRtEYqlywnL8V8TUxSVVVpbKynqmrB9S+kqvh8
      fgymqeTg9qF2fOZicpOuVfYokSCXugcon3Vzcs+w383Zk+9jcwWJqBoSU7JYUb0c8022iqGe
      VszZszCJYVRRi05744jD/T3tJGeXkGC8s6lgZVnG4XCQkpKCIAhEIhEsFgtGo5GkpKko5BMT
      EwQCAdLS0qIajJgBTCMjboVNm7cihBzsPnyanC3r8djtBCOQkJyCXiMwPDJMVdV8lEiQSbsL
      jTGeJLOBSNCH3elFYzRjlkIc2nOEyjWrSE1IxpyWh0mrQw758IcU/H4/poRkjFotRfl5oKqE
      Al6cbh8ag5mkhDgiAR/BcAR/IExCUhJ6rYTWGM/qh7cz3l3HYCiHxXOyooEKfCGVxKQkNCiE
      ZJlwIIDWYEBVQQ0HULVxpGcXIkgyrbXH8JqKmVOSQ1K8EZ/biS+kTJUjqvhDCoR9KFoTmdl5
      aPR3vtnt3LmTpqYmfvjDH6LVatm3bx9+vx+bzcbjjz+Ow+HgxIkTpKenMzExwVe/+lUgZgB3
      BUkXR5xBBK+N+pZu9JKCWzXz8Moq4LKT5sIZfBhw2SapqNnAQO1R5LhkBDGeOUUmJuyT9Pf2
      I5XGEek9gq9oO6ljJzkyYKAwUcGhJrBxSSnHztazec1KBrrasHgj+J12Zi3fiKfxAB3hNFJE
      H0pCMTULyz6yrh5rPxcvDSMJYWRTDgvzTZxubETSJFE5O49zTZ3ESRKlVYuxtRwhbU4NNpsV
      p1NDYrwJ1TNMbVM/5jgtATGZ6oXZvP9+Iwa9RGnlUsbbTlBQtZ7M+DvbAzz00EO4XFP7SMLh
      MHa7nS996UvYbDbOnj2LVqtl3bp1FBUV8dJLL0X3DMUMYDrxjLFn97toJIGCuctRtToMsheL
      I8CIewKiBuCk6WInCblZKH47vaMu4rQiTlXHjMI8EtPMFOYVsGjZEkxA31Sye0SNjqpl1cxJ
      9HH0wtUMPCoCBoMG58AYboeV0QkPKYYkFi9eRYZs41zn2MdWebijngGrhkR9BP+4gj9/BuiS
      qV69Aq1vHFnQsbR6FXFaERugMSZSXFxKIGkmcwtSaD53hNmLqylM1XPx5EEmPelEMLBs9Uri
      dCLj0/Sor+QGgKkQlfHx8QiCEBXAL1++nDfeeANRFCksLESnmxo+xgxgOjFnsWX9RnSaqbWG
      wXNHMMxZzuZkDbv2HoweJiCRmF3MI1sfQpRDRNCg5NeghLycO3oMaeMWBFVGVlTUm1gljAQ8
      tA+7eOiRTYy2nGD0FvbYa4zxVC5ZwryCeELBMGGXldSM9KhWOSElg7g/EC4LgoosK6iqilYj
      EQgEUCICgbCKRhJJSEknTnf31ltEUcTn86GqKn6/H0EQOHPmDJs2baKoqIhXX301mkM4ZgDT
      iCnu2lDfyfnZXDh9hPGEZGTRcPUYIZ7ZBVp2v/sueoOJBctWYe88R/eYG40pg0SdSGlBPAff
      fY+KxSsx6c3opKmEgjoJEASMBj0IIiajEUmrx6S4OLD/EHopRNpsCa3BiCQAooRBf200Ckmr
      R3+5KeSVlXPs+FEGmjSkF8ymPDcOve7ycEWUMBquTrz1RjMaAdIyM2k5dQK3cx7zy2Zx5tQJ
      2i+oZJdVkWLSXnOOwWhCEgSsfe0E4vNIEx30OiTmFmfxSVFVlaGhIRwOBwMDA+Tn56MoCs3N
      zbS1tTF//nx6enoYGhpCFEXcbnd0L1DMExzjU8PtiOIPHz4cHdcvX74cvV7PmTNnyMjIYO7c
      uSiKQl1dHXa7ncrKSjIzMxFFMbYVIsanh5go/jNOTBR/e0QikZgo/rNMTBR/e6iqGhPF30/I
      4QA2qwWrzU5Yvv5IU1Vl3G7vXapZjCvEeoBpI8KFE8cgPhVCPpKKq5iZnXCd4xWcTjfx8bee
      JC4GDA4OUltby6OPPopGo+HUqVO0tbUhCALV1dWUlpZy8eJFGhsbKSkpobq6GogZwDQSwOER
      WL58HvEGLYIg0NrcxIy5FWiFCC2tXZSmiQxGUhhr62TBugXY7S5yczMYaKujfcCGKa2IZQtn
      R+OKxvh4Ojs7sVgsUVH8yMgIzz77bHTPT39/PyMjIzz33HNRjzHEhkDTiJnKuZmcPHKAo2ca
      8ARlkhQHHdYg4cluJiNJRDw26pr7qFi5hDg1zPjYBCAQl5RJZVUVGmsHw7Fw6TfF+vXriY+/
      mljBZrPx6quv8vbbb+PxeGhsbCQUCvHKK6/Q0tISPS7WA0wbKpkl89hcUoG17zynL/Tx8JIK
      Os+1I2nczJ4/C4Z6mFW5iGSjiCJPZUNQFR/tzZcwpqXjDTrw+oDYqOiW+fa3v42qqrS2tnLk
      yBGCwSCVlZWUlpby+uuvU15eDsR6gGnES+P5JkbGLLi9YYwmA2iTSRHs9EUMpF12joritT+B
      qvoJKWZystIR5NiS6idBlmUsFguqqpKYmIgsyxQVFTE2NoYgCMTHx0eHSjFH2B3kWk2wysRo
      P0PjdnTx6cwozkUjCky2n6JTV8HS4gRkjw2PJo0kA6hqGIvFSUZGKtahLsacETLT4jEk55H4
      gOTRuF1RfGdnJ/n5+WzZsoW6ujrGx8dRVZXHHnuMxMREdu7cicvlIjc3l40bN2I2m2Oe4DvJ
      jUTx9sE2zrTbWbd+OYZYDKAPEcsU/xknlin+9ohliv+MExPF3x4xUXyMGHeZmAFME2poknN1
      HSiqCmqE+vpG5Nhoc9qQZTk66QVwOBxRDcCVFR+Px0NPTw82m+3mE2XH+GQIumQE+xlGPEWY
      J1sI6LMRAY/DisuvkJKejl6S8Th9eH1e9PFJiCE3PllLRnoKohphwmpFFg2kpyWjhLz4gjJe
      jxdzchrxdziqwmedHTt20NLSwg9+8AO0Wi2nTp1Co9Fgs9koLi6mqqqKN998k5ycHPR6PTU1
      NUBsGXRaiXgGOVw7ilEMs3T1SrD3captnHhdBHs4kYdXpvH6L09TVpVPx6U2yubMxTvaQ2H1
      U2iHLzDsE1C9E8QVLiLPX8+BPgNlaSIWn4ata5fc69u749yOHsDlcvHWW2/xpS99Kar3lWWZ
      rq4uenp6iIuLQ6vVkpmZSVpaGgkJCYiiGJsETycacz4Z8ikiRZvRSQIdzS2MuRQ8goAl4AbS
      yCubx5JFpYxZJ1i2eBHODg99fpnBliZUYxqqEkY7NEpBuoZ5i1dRkRLkaG39vb61Tx0fzA0A
      MDY2xttvvw3AM888w969e9HpdHi9Xvbt28c3vvENIDYEmnYSjEmEk4wIgN6gY+aMFSzMMePz
      +wHnR58kgMGczuL1m0jQQjAs4++LhU6/FbKysvjWt75FW1sbR44cIT4+nnnz5lFYWEgkEsFu
      twOxSfC0o4uLRy9NOb0KqhYz2XCEd3fvob5zFNASZ5py8ybEmwEQdSYMWolF80o4vm8P7+07
      zNCkD0lvwqABBAFTXNw9uptPJ6qq0tPTw8TEBN3d3bjdbg4fPkxnZyeTk5OIosjixYvZt28f
      7e3tjI6ORqPFxeYAMT413I4o/sSJE1E56qJFi7BYLAwNDWEymViwYAFarZahoSE6OzspLy8n
      PT09JoqP8eninoviVVVldHT0rlXgfkNVVWLvk0+Ox+OJrtnfLa4xAEEQ7qoF3m/cboaYBx1Z
      lklJSbmrZV53EqwqMpahPjo6u7A6bl2wLUcCjIzZPnHl7iT28UEGRib4KG26EvQyMmb7yO9u
      DxW33crIyCgef5ibv7xK0OvlZtUAciSAPxhBDvpw+2MGeCtcxwBU+s7u4lfvnmJooIfDJ+tu
      6oI+RyevvnEEAL+9l3994Y3bquDopaO8c7zttq6B7OKtl37Kf/znq0wGPtzFBm1dvL7jIP47
      HJHD0t3A2cYurLZxBm8xA+RAfSP2mzzWb++nfcCJEg7iDz2YIpre3l5+97vfXROXyWq18vOf
      /5xgMIjf7+f555/nxRdf5O23376ZrRAqvS2NpM/6MmvXliIKoCohLr7/HrVd46QVzmPrugUc
      fPN3LHjiOeKHz7C7R0Oa4xi7dnYRDjtZv24WYY+Ng7teo2M0wuPPfgGttZX3jpxD1ibz8Lat
      SOMN7DvRREjRsmb7k+RJNna+e5CAGM+ylUu5sHsnR/tN+Cc2svmRCs7u20uPxcfMxWuYl+7j
      QL2N9OAQhuJKeltbSE8z090/wcbPPUNZ+pSW0DPcgT1xEfNMXXSN2kkvMPL+7p20W3wUz13G
      uvIk0tNSEAlyes+7NA3Z0KUU89SjD2HW3Tjpw0cj09Q5xqqHN2K8HBw35BrndG0DAUWifOFK
      cuOcnL7Qj89rx5Seh+QdZzJkYs26ZaAEaTl3nKAjxJxFK8hLkrh0sZahCT/ZZRXMK8nCPtLN
      xdZuQmEf6TNqCHknsSsZpBjdNJytxeZXyJ9VxdzCu7fH/l4xODjI5ORkdA4hyzLHjh1DEARk
      WcZqtVJeXs6qVauuyUN2nR5AYMnWZ3Cf/x3P/+IVGvqsePpr+f0FF1/92lfR9Ozn6CUrPW0t
      eCIQdIzSNuxi6ZrVlM1axte+/DgpOkDQsnTDY+QyQGN7P2+/toP0imXkGyzsPHCRuKRslq+u
      piTRyd4jjYxdqmVUU8ijWx8iMyOTVSsWUblyM08/Xs3wmX1ctOlYubiMEzvfYsBi5dSJ45A+
      m9kZOlrbeilb9gjzzM5rQoB3NTeQUTaXBbOyaGjsRfUM8379OOu2PkpVSToEXbR29BFWBbLL
      KqipWYXl3BHaJzy38ZO4QUhBJ33gEYs6imfOZU5ZOs0NHSB7cciJrH34Iax9bcxZsoa5CQHG
      /YAgUFi+jHUrK2ltbMAz3MKErpgND9UQ7Gtg1OWjpXOE5WsfZtXCWUhA2OfA7g0jCBKZBWXM
      nZFPV3s7D0KorpqaGsxmc/RzfX09ZWVl0bDpLpeLixcv8vLLL9PQ0BDtAT7eAFQwZ83iz773
      1zy5bh6//pd/ZdAyQlxWMQadjrysREbGbtyta02JJBi1SKJAOOBnxGLF55pEkz6X9UvyOXvg
      Xc429+CVQQ2FyVu4jvmJTl5/9VUaeqzXXGtidAhPwI/NpbJ+20YSNZCSM5u1NUtJNevRGczE
      xxmQJBFFuTziVoM01LXQeeEghy/2cqmuFndcAU9trOTku2+w88jFaNAqxTnM73ftoXfQiihI
      hG5rRcKEqtqJKFdH/iO9HQxbbDg9Qfz+qfDcicnJSKKEISGReIMGrU47NVcQdJhNOrTGRLSS
      jNdpJyUzC1GjIytFg90TQG9Ow6SVECWJD+rLvNZ+2vvHcLg8hD1+QrdxF59FnE4n58+fR6/X
      Y7PZGBgYoKKigj//8z/nC1/4AqdPnyYQCAA3mAM0HNvLybpmLA4ncSkZZM1chDR4jrqGBs52
      elkyr5jkeIn2lhZaOvoB0OnTMERGaO7sJ/AHrx5NXAJVs3NxuCEjLQk5HMBud5GWnYtBVJEB
      ++gwpvzZzJ+ZSkfHIOaULHwjHXT1jZE3rwrR5SAhLQOjViWigKTVIl1HXRia6GVUP4fvfucv
      +Ivv/RWlmnF6egZwYGLZioVM9nfgDV7uNgMevBE9WVkpyLe9mqNlRm48Zy+2MDjYR++QFZfH
      T0pqCkZJJXyDGbEgRBgfHKSz5SK6hGyS80oZaa1loK+HDpuGglQjQccw3f2D9PQMXDNhDvk9
      6BNSMBu1hB/AWKWCIFBRUYHVasXtdjM5OYnNZsPn8yFJUjRWEFzPE6yq+F0Wmlo6CaoayuZW
      kp1kxDneR2PnEFnF5czIS8Y13kdD5xi52WmEtEnMyk9hpLuV/gmZinmlDA7aKJ9VyFh/F0JS
      ISk6P00NzfgxMGNuOYbAOE0do2TlZyEK8eSkCLS0tOFV9MydV0mKQaXrUhNOJYmqyiLGui7R
      O+ogLa+UwjQtQxNhZhXnQMhLW+8YxWWleEe78RozyU81E/JM0G8LUlqUgwgMd11Cm56HZ6Sb
      IauLrOK5lGXoaOufZEZZPkOX6hnz68lM0JGUX0SKUfeRj+ej+NAyqKowPtiD1R0iK7+EZF2Q
      ju4h4lIzMIoi6SkGJr0aUhJ0WG1WMtIzCDgnUEwpqB4bQyMWVF08pSUFaAQVh2WQEZuXrMIS
      Us06Aq4JegYtJKSkEB+fQpzow63EkWRQ6O/pQdYlYDYaSc9M5ZPOZO4mtyuK7+npIScnh+3b
      t0ellfv27aOmpobx8XGOHz9OKBRixowZVFdXx0Txd5qYH+D2iGWK/4xzu5niH3TuxfOLGcAd
      JCaKvz00Gk1MFB8jxt0kZgDTSMPJd6ltG+PKLKur/ih7jzcSm3XdeSKRCCMjI1FHWCAQoLOz
      k+7ubmRZRlVVBgcH6ejoIBS6ujAc66+nEa8Qh2egDXlmJhoiDEx6UHwqYb+TsCYek04g6HGh
      GhOIuKxMuPyYktJJSzDi9nhQgl6cAZWs7Cw0sg+7O4DX6yMpNRWfYwIMCWSmJBD0OrFOOtHG
      JZGZlkjE7yYsaHHb3aRmpz8QP/LOnTtpbW3l+9//Pjqdjv379xMXF4fT6WRsbAyj0Uj3/9/e
      mT7HUad3/NNzazSHDuuwJUuWfMm2fOFD4AUbG7BlWzG7xbKVpEIlZF9skkpVUvk/9k1SebFb
      oVRZCBBgd81hexfMgpFWvmTrvmek0dwzmhlp7p6ju/NCZkBADMY6sD2fd12j+vWvW/P09O/3
      PN/na7djNBrp6+vjZz/7GVD8BVhhtNQaIShK5CI2NBXbUAkgJzxc7XeiKNB3/RqiDE6HjYWF
      eW5+dpWEInPzyoeMzHgIzg5ye3KOjG+Eiz0jhIIu3n/3Ar65EH2fXSeuyPhcs4QiC0z19+CY
      zxOyXefjrls4g1FWt7h47Th58iQbN24sHLe3t/PMM8/Q1tZGJBJhYmKCc+fOcfbsWaLRaMGL
      rBgAK8yWbTVMTfixTwbZsr0GAH3VdtRRO3kpTkpVgVWTh7yEy+Ui6LQTEkFtXc+RQwfYe3AX
      ykISQaVm6+4D7Nm9l6qaSvbv28umCiMZQCXk8btdBAI+/KE4igJVza0c2ruF757FeLD5sjcA
      LHaZGxkZ4cqVKxw7doyamhq6uroYHh4mEokUiuaKAbDCaCs3o8xPEMhpqDF8frvVtNYZuHq1
      j4qtrShpD45YOadPn2JnYwX34hMnZdNMeWM8097OoV2NSLKMSqOlosy6ItfzoNDb24vT6eSn
      P/0pFouFY8eOsW7dOuLxOCaTCa12sa9SMQBWEJPJjICWhgoBw7rNqAQV1rLFJ1XV9j04bD52
      1JUg6NZhzEzzx8ufEVP06NUC5jsieUGlw2TSo9IZMelUCIKq0ALEYDah1+qo0GX56MOPcc7n
      MRk0aA3mRQH9I4KiKIyPjxMMBhkbGyMej9Pd3U19fT02m41AIIDf70eWZbLZLE1NTYXeQcVM
      8JqQwzUxxGzSypOPbV7ryfxguB9R/I0bNwqvNa2trUt2e+rr66murmZ4eBitVsvu3bvRaDQI
      glAshVgbMthGZ9mwbSvGogNegbUQxS8JgKIo/v5QFGXVRd0PE8lkktLS1TNEa2hoEIqi+GWk
      WAx3f8iyTGVl5aqe81tE8Xm8jimGR8fwheP3PLiUS+P0BL735JaMlU1hnxgnnBC/8fNo0MNc
      LL0s51pO0rEw4WiqIIiX8yJel5NIXPyKSF5BjMe51/CRxATR5KMmeVk+7iqIme45z+sf9bEQ
      DvDnm4PfacDkwiT//T+XAUgvOPjPV95ZjnkSnLzKf/3q17z7p6Fv/Hy85w/csAWX5VzLyWD/
      Ta7f7Fv0CQC8w7eYicTJ5r6+1+keHP7OQvjPUWSJ3DfsmybDs4w/Qv1Ep6ameOONNwoL4StX
      rvDKK6/Q2dmJzWYjGAzy+uuv09nZSXd393cTxTsnRilv+kueeHIbagFkKUPvxx/QNxOmrL6F
      c88e5sO33uDACy9j9vTwvk1DTbybixdsKEpiURQfn+Ojd99g3CPyk5f+Bm1gkEuf3kbSWnim
      4wyeaxfIlTcyPTrNgdYqel1ZLGkvidKt/PVPjqNXAchMjExw8Ll2JscGSUiHyPtGOX+pC0lr
      5alTpymrrCKuVRML2Lh06QrhZJadT7ZzdG/T2u315udJU8N6Q4xoVsaU8vJJzyAlTZsoL69F
      jtgYsfsAie1tZ0DJMtl3nb7gPA0729i+wcBAz1UCqTw1TbvY21zFYH8vYipNNKvj8ad+hDYx
      RzBXTakyz7XrQ0haE7v37Wby2mdMhA34/Tto27+R4Wu9RESZ+u17aak10D88iphIIKostD1x
      CJP2wV6Mf67++nwNFgwGeemllwrbndFolHPnzlFSUkJnZycHDx4Evk0U3/FX5Ibe41e/7qTX
      5ifhuMG7Qxn+7u//FqP7Cp+OBpidmiApQTYaYMqf+JooXlDrefzUj2lQexmamOX3b75H5c79
      1OmCvH/5Fn7HCDcG3Rx++ijqqAdf2sjz587gG7pGaDFbjSJGGHXE2Xfo5TVp9QAADGJJREFU
      AGUZH45gCtfQTWLmLfzF6ROsM+lY8DnxRJJojWXsPnCYA1sr+OjCZ6zlS9H89CTWpq1sa7Qw
      MRtFW76RfVu28eSpU+zcAMN2kWPPnmJnlUA0CyBTuXEHzxx/ipBzCkFQUVXfRMvWTcxMjiEp
      MvOxFLsOH+XwJh3TcxmkdIz5ZI64bwZNbQuHDuzBYjSyZ/9jtO7/EU8/3opWpaW2YTPbmtdj
      n7QhSTliaYX9TzzN9nUS3vkH/xXqyJEjSxbQsViM1157jbfeeotoNIrFYiEUCtHV1UV1dXUh
      MO4qii+t3sIv/vXfePHUId769//AHQ5grN6IXqtjQ5UZ/9zCt05MY7RgNmhQqwTymTSB8DxK
      Loul8QCnjmwHQceeI0/RumUjWkHAbLWgU6sQBApVkwu+aaZm3Vz67ds4fR4GJ51sOXKKVtMC
      //s/rzEw80XzLduNy/zp9iR5RYUgK2taCzNhc+AY7KJraBbHxNjStonZGCXr6tGpBdSfd44Q
      DFSus6BS6dFqFDJhJ2OuMGkxB2KGDFBiLsNs0KI36JeMV9m0hxptnLHB27hCS5uYJQIz2H0R
      xGweOS2SBUqt5Rj1GvR6/UPZzvHnP/85L7/8Mvv27ePTTz8FFitEP0+GSXdeG+8uir9ykU+u
      9eHy+TGuq2P9toPo3De41nuTa7YUbXuaqLRoGOnrZ3DcAYBOX0VJ3k3fqO0bRfH7d9bhDyYw
      lmhJixkQVGg1d1OsKkwPD3HwxX/in3/xD/zLP77IdP8AXrcTXXUT2zYaccx+8e6fisXQlprR
      CjL5e6kpWGaU/DxJQzPnzrTTfubHbDWnWfiyEt5QQzY4jH1mBpvzmzcK8mISlaEUvQbEzN2X
      x7HwHLLGiNViJJVIodEbiAZmcXlDiGIKtaEUjSCTyT38Ivl8Po/L5UKWZbRaLYIgEI1G2bRp
      E08//TS5XI5odNGb4a6ieDEeYmxyhqysYdP2HdRYDMTmXIxN+6hq3Ebz+jLicy5GZ4LUVleS
      01rYvKGMwOwkrohMy45GvJ4I27fUE3Q7EKx1lGkzjI+Mk0ZP87ZtSPNeNBUbqTTpSIY8hGQT
      jRV6ph1eNjQ1Y1ArBN0O1GUbqDTpkTIJZlwhamvM2CftZIQStu9oQYl6SerWUaXPMDpmx1RZ
      jYCWxqYNq1YO/OVtUCWXJJxSUWldNMdIR8PIxgrkaARdZQV6QSbs9TAXS5Fwj2N67HkahCia
      8jK0ikw0GsNqMeFxTJNRl2I2GqioLCMRT1BmtSKJMZJKKUaSxGUDZk0Wt8tLXmOkoaEOLRIB
      j5OkUkrDBiu+WSeyzkxpiYHyslKS6SxWs4lsKkZOXUqpfu1l8/crinc4HNTW1nL27FmGh4dx
      uVxoNBo6OjoIhUL09PQgSRLr16/n5MmTWCyWYiZ4Obm3PECeoatdeKJZ9JYajjy+786C/9Gl
      6BT/gJPP55f0pixyb6y2U3xJSUmxK8RyUhTF3x8ajQaDwbCq53zEf3SLPOoUA2AF6eu6yHvv
      vc8HH1ykd9z5/bYbFYmBG7f45gKQO+QzDI5NfutQkhhj1DZz73N4AMjn8zidzkIiLJvNMjo6
      itvtLjj3zMzMMDIyskQUXwyAFSStNnP6bAdnTj+La6IfSYZ4xI/dZscfiaMoCtFolIWgB/uM
      E1Fa/EfFQj7s9mncwXlQFOZDYSQUsqkoM9N2nJ45JAUURSYScGOfvvO3KIjxCNPT04RiKVAU
      EpEgdvs0c9EkipQjEongczlw+ULID9Hq7/z58/zmN78hn8+jKAoXLlzA6/Vy+fJlXC4Xt27d
      oq+vD6/Xy29/+9vv0B26yH0jiXHsdhtjwwOY1jWgUoHX7UTMiPR3XyUO9HV/xLhrjuTcJL0j
      AcSQjc96JxHFJJ90X/3SaAphv5d4SiQw3ceYN8G8Y4ibY25EMU0mJ5HPJBgYHCGdTjJ0/Rpz
      8TjXb90mLabwBRbrgkKeGfzzCRzDN3AuPDyVq+3t7dTX1wOLu3GpVIoTJ07Q0dFBX18fU1NT
      nD17lueee45EIlEQxRdXbCuIIkvksjkEtR6VJCIpefKiiCMYIOT0EEqDYK7h8QP7kCUvPT0J
      vDE3e44fo0ErM+36kjZDWTQo8cy6SCcjmI0hcokYbU89RZmcIpQaRYy5GRtzUlmzQC6TJpoC
      k1ZgIZ6lvrEUBahubGH/nlbmbCmCYh7QrtXtWVa+7A2Qz+cxmUwIgoDZbEaSJGpra/nkk0+o
      rq5mbm6usFtXDIAVRGMso2XHDjTk8f/hMpk74vf2049z++L5bxS/60sEwvNp6itAzHyxpapI
      OUYdcxw/eZqFmRsML8holCwLyQwmjUg6k0OlKaF20zaePXEQKZNAVpVQc+AJyCW51jNA2fG9
      q3j1a4darSaZTKIoColEArVazdGjRxkfH0cURaxWa0EUXwyAFUSfi3LpwgeoVGCt30GpoZoy
      eYQ/fBSgVG1ivZqCgwmCDotFYf22fUxd+ROXFAPxrAyCcMdEQ0N9uZbLH35IubUEa6WRLVtb
      +Kzrj0zqLegsFZRY6mgom+XShQuUltdw4LHdOIZv4gqLVNZvx6jSYDYtusxrDWaMuofjDViW
      ZUZGRvB6vQwMDLBz5050Oh3d3d04HA6OHj2K3+8nkUgQj8fZvHlzURT/Q0Wc9zDuiVGiymEL
      pDh7/PG1ntKqcT+i+L6+vkKB286dO9FqtYyOjlJeXk5jYyOiKDI+Po5Go2HHjh1FUfwPFTkv
      4pp1IkpqNjQ0Yn6E+pusuVN8kftjuUohauoaPh8RUXx0Sivy+XzBu2u1KAbAMlLsCnF/rMX9
      ezhWQT9QkgsLZL4l25RNRElLkE1EiC23U3eRb6UYACuI43Yf4fzdv9Tz08P40otPv+Ji7Psz
      NjbGq6++WihHj0ajvPPOO4yNjQFw/fp1Ojs76ezs5Je//GUxEbaaLMwMMRISSUVClDXs5mBL
      HbNjvUy6woiRCK3NPyIZnCZacQhjPsCfrw+QkQW27G5j83rLWk//gSAejyOKYqHEYWJiAoPB
      QCKxaHbe1tZGW1sbmUyG3/3ud99BE1xk2cgmY+iqmnnmuedIz82gpDxMhko4cfIUB1sW0/eZ
      RJhEDgSNgY1Nm9lUX83E2Ogaz/zB4fDhwxiNxiXHjY2NXzPd6+3tLXSEgGIArBJqysutqFQa
      dFoVJOcx1NShFgTU6i9LERV8tjFCySyCWkc+l1qzGT+M5HI5ZmdnaW5uLgRGMQDWgrKNpOy9
      2KZsTMx4l3yUEbOoNRpy6TiP0A7oqjAwMEBraysq1Rdf+2IibBn5qiY4OT+PxlqGkI4j6c2U
      aARi0Shmi5VUNIg/nMBqsVJaUYkqHSGnq8BIEqfLj9ZcQYkWKsrL1/CKVpf7FcW7XC6qqqo4
      e/YsPT09eDweFEVh165dHD9+nMuXL3PixImCaq+oCV5mis1x74+iU/wDjiAIS35ei9wba3H/
      igGwjBRF8fdHURRfpMgqUwyAFeT2ld9zayqEokDaM0i/K/G9xonO9jHi++F5H/yQyOVyTE9P
      F2qJUqkU/f39DA0NFQoUc7kcdrt9SXOCYgCsIKLGyvz0AGlJRhJjLKQkQCbonmHCNoOYV1Dy
      Kfw+H5MTEwSjqTstKcNMTowz7Q4iA/lUlLhYLLK7G+fPn1/iD/Dxxx+TSqVwu910d3cTjUZ5
      ++23efPNN4sBsGoIWvZtraB/8ovmt/Ozo9jm0ihimJ6bo5D28MnVSQQkrl/pIilDOBBAQsW8
      vZeJYHFX6btw5swZ6urqCsft7e088cQTtLS0kEql0Gg0PP/881/rPFdcsa0w1oZdSJ92kajX
      ggBTo+N4c3rCAqQ1ZUAtdU3b2bq9Bn3UhTuuoM8lmbEHyMb8mNdFqS4+pr6Vr5rraTQabt26
      hc1mo6Oj4/813yve2pVG0HLgUCtDfcMoKGzavIlSyzq2bG6mpXlR+DLnmWZ0uJ+JeCn1RpnJ
      qRk2bmqmqtyIVNQX3DOKonDx4kWsVisvvPDCko4RX6WYCFtBYrEoJrMFlSAwH3AjmGspK1ER
      8rlZSOWpXF9Hmezk/Z4oO7dUUr2hHotBQzI6hz+cpKLCCjoTJiFFWmXGYlj7FuYryfeVREqS
      xKuvvlrIBHd0dPD2229jNBoRBIF9+/ZhNpvp6urC7/dTU1PDiy++SGVlZTETvNYoKQ9D3hL2
      bKlY66msOUVN8AOOLMv33v9TX8uuJgodDR5lZFle9fvwf+ehd2mbN0meAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='map of bottom 50' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map of top 50 ' width='192'>
      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
      YwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='top 25 hapiness score' width='192'>
      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
      UhS/909QAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
